FROM node:20-alpine as builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm install

# Copy source files
COPY . .

# Build the client React app
WORKDIR /app/client
RUN npm install
RUN npm run build

# Create simplified server for production
WORKDIR /app
RUN echo '// server.js for production' > /app/server/simplified-server.js && \
    echo 'const express = require("express");' >> /app/server/simplified-server.js && \
    echo 'const path = require("path");' >> /app/server/simplified-server.js && \
    echo 'const app = express();' >> /app/server/simplified-server.js && \
    echo 'const port = process.env.PORT || 5000;' >> /app/server/simplified-server.js && \
    echo 'app.use(express.static(path.join(__dirname, "../client/dist")));' >> /app/server/simplified-server.js && \
    echo 'app.get("/api/health", (req, res) => res.json({ status: "ok" }));' >> /app/server/simplified-server.js && \
    echo 'app.get("*", (req, res) => {' >> /app/server/simplified-server.js && \
    echo '  res.sendFile(path.join(__dirname, "../client/dist/index.html"));' >> /app/server/simplified-server.js && \
    echo '});' >> /app/server/simplified-server.js && \
    echo 'app.listen(port, "0.0.0.0", () => {' >> /app/server/simplified-server.js && \
    echo '  console.log(`Server running on port ${port}`);' >> /app/server/simplified-server.js && \
    echo '});' >> /app/server/simplified-server.js

# Production image
FROM node:20-alpine

WORKDIR /app

# Copy only what's needed for production
COPY --from=builder /app/client/dist ./client/dist
COPY --from=builder /app/server/simplified-server.js ./server/

# Install only what's needed
RUN npm install express

# Expose port
EXPOSE 5000

# Set environment
ENV NODE_ENV=production

# Run the server with explicit CommonJS mode
CMD ["node", "--no-warnings", "--CommonJS", "server/simplified-server.js"]