FROM node:20-alpine as builder

# Set working directory
WORKDIR /app

# Create the most basic static server possible
RUN echo 'const http = require("http");' > /app/server.js && \
    echo 'const fs = require("fs");' >> /app/server.js && \
    echo 'const path = require("path");' >> /app/server.js && \
    echo '' >> /app/server.js && \
    echo 'const PORT = process.env.PORT || 5000;' >> /app/server.js && \
    echo '' >> /app/server.js && \
    echo 'const HTML = `<!DOCTYPE html>' >> /app/server.js && \
    echo '<html lang="en">' >> /app/server.js && \
    echo '<head>' >> /app/server.js && \
    echo '  <meta charset="UTF-8">' >> /app/server.js && \
    echo '  <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> /app/server.js && \
    echo '  <title>Moby Comps</title>' >> /app/server.js && \
    echo '  <style>' >> /app/server.js && \
    echo '    body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif; margin: 0; padding: 0; }' >> /app/server.js && \
    echo '    .page { max-width: 800px; margin: 0 auto; padding: 20px; }' >> /app/server.js && \
    echo '    .header { background: #002147; color: white; padding: 20px; text-align: center; }' >> /app/server.js && \
    echo '    .competition { border: 1px solid #eee; padding: 15px; margin: 15px 0; border-radius: 5px; }' >> /app/server.js && \
    echo '    .competition h3 { color: #002147; }' >> /app/server.js && \
    echo '    .progress-bar { height: 10px; background: #eee; border-radius: 5px; margin: 10px 0; }' >> /app/server.js && \
    echo '    .progress { height: 100%; width: 75%; background: #C3DC6F; border-radius: 5px; }' >> /app/server.js && \
    echo '    .button { display: inline-block; padding: 10px 15px; background: #002147; color: white; text-decoration: none; border-radius: 4px; }' >> /app/server.js && \
    echo '  </style>' >> /app/server.js && \
    echo '</head>' >> /app/server.js && \
    echo '<body>' >> /app/server.js && \
    echo '  <div class="header">' >> /app/server.js && \
    echo '    <h1>Moby Comps</h1>' >> /app/server.js && \
    echo '    <p>Online Prize Competitions</p>' >> /app/server.js && \
    echo '  </div>' >> /app/server.js && \
    echo '  <div class="page">' >> /app/server.js && \
    echo '    <div class="competition">' >> /app/server.js && \
    echo '      <h3>Win a Tesla Model 3</h3>' >> /app/server.js && \
    echo '      <p>Get a chance to win this amazing electric vehicle!</p>' >> /app/server.js && \
    echo '      <div class="price">£12 per ticket</div>' >> /app/server.js && \
    echo '      <div class="progress-bar">' >> /app/server.js && \
    echo '        <div class="progress"></div>' >> /app/server.js && \
    echo '      </div>' >> /app/server.js && \
    echo '      <p>75% of tickets sold</p>' >> /app/server.js && \
    echo '      <a href="#" class="button">Enter Now</a>' >> /app/server.js && \
    echo '    </div>' >> /app/server.js && \
    echo '    <div class="competition">' >> /app/server.js && \
    echo '      <h3>LEGO® Harry Potter™ Collection</h3>' >> /app/server.js && \
    echo '      <p>Win the complete collection of Harry Potter LEGO sets!</p>' >> /app/server.js && \
    echo '      <div class="price">£5 per ticket</div>' >> /app/server.js && \
    echo '      <div class="progress-bar">' >> /app/server.js && \
    echo '        <div class="progress" style="width:30%"></div>' >> /app/server.js && \
    echo '      </div>' >> /app/server.js && \
    echo '      <p>30% of tickets sold</p>' >> /app/server.js && \
    echo '      <a href="#" class="button">Enter Now</a>' >> /app/server.js && \
    echo '    </div>' >> /app/server.js && \
    echo '  </div>' >> /app/server.js && \
    echo '</body>' >> /app/server.js && \
    echo '</html>`;' >> /app/server.js && \
    echo '' >> /app/server.js && \
    echo 'const server = http.createServer((req, res) => {' >> /app/server.js && \
    echo '  // Log request' >> /app/server.js && \
    echo '  console.log(`${new Date().toISOString()} - ${req.method} ${req.url}`);' >> /app/server.js && \
    echo '' >> /app/server.js && \
    echo '  // Health check endpoint' >> /app/server.js && \
    echo '  if (req.url === "/health") {' >> /app/server.js && \
    echo '    res.writeHead(200, { "Content-Type": "application/json" });' >> /app/server.js && \
    echo '    res.end(JSON.stringify({ status: "ok" }));' >> /app/server.js && \
    echo '    return;' >> /app/server.js && \
    echo '  }' >> /app/server.js && \
    echo '' >> /app/server.js && \
    echo '  // Serve HTML for all other routes' >> /app/server.js && \
    echo '  res.writeHead(200, { "Content-Type": "text/html" });' >> /app/server.js && \
    echo '  res.end(HTML);' >> /app/server.js && \
    echo '});' >> /app/server.js && \
    echo '' >> /app/server.js && \
    echo 'server.listen(PORT, "0.0.0.0", () => {' >> /app/server.js && \
    echo '  console.log(`Server running at http://0.0.0.0:${PORT}/`);' >> /app/server.js && \
    echo '});' >> /app/server.js

# Final stage with no dependencies
FROM node:20-alpine

WORKDIR /app

# Copy only the server.js file
COPY --from=builder /app/server.js ./

# Expose port
EXPOSE 5000

# Set environment
ENV NODE_ENV=production
ENV PORT=5000

# Use raw node to run (no express or any dependencies)
CMD ["node", "server.js"]